
Skip to content
This repository

    Pull requests
    Issues
    Gist

    @vasilyPML30

5
2

    10

HFX-TA/cpp
Code
Issues 0
Pull requests 0
Projects 0
Wiki
Pulse
Graphs
cpp/hw_03/
Latest commit 286e7db 10 days ago @Icemore Icemore [hw04] fix executable name
  ..    
  README.md   [hw04] fix executable name  10 days ago
README.md

Напишите программу, выполняющую сжатие двухпроходным алгоритмом Хаффмана.

    Ограничения.

    Наибольший размер входного файла --- 5MB.
    Ограничение на время выполнения --- 5 секунд.

    Требования к реализации.

    Реализация должна быть выполнена в объектно-ориентированном стиле (например, включать классы TreeNode, HuffTree, HuffmanArchiver).
    Для хранения элементов, там, где это уместно, должна быть использована библиотека STL (например, std::vector, а не динамический массив).
    Ввод-вывод должен быть выполнен с помощью классов STL (iostream).
    Должны использоваться исключения.
    Должен быть реализован свой класс для автоматического тестирования или использована библиотека google test.
    Для методов должны быть написаны автотесты.

    Примечания.

    Рекомендуем удостовериться, что сжатый, а затем разжатый Вами файл эквивалентен исходному.
    Рекомендуем протестировать на больших файлах, файлах разного типа (текстовые, бинарные) и на пустом файле.
    Рекомендуем проверить свою программу на синтетических тестах, заведомо плохо кодируемых алгоритмом Хаффмана.
    Рекомендуем проверить свою программу на утечки памяти

    Параметры командной строки. Значение параметра (если есть) указывается через пробел. Программа должна проверять корректность параметров и выводить сообщение об ошибке.

    -c архивирование
    -u разархивирование
    -f, --file <путь> имя входного файла
    -o, --output <путь> имя результирующего файла

    Вывод на экран. Программа должна выводить на экран статистику сжатия/распаковки: размер исходных данных, размер полученных данных и размер, который был использован для хранения вспомогательных данных в выходном файле (например, таблицы). Не должно выводиться никакого дополнительного текста, только размеры. Все размеры в байтах. Например:

$ ./huffman -c -f myfile.txt -o result.bin
15678
6172
482

Размер исходного файла (исходные данные): 15678 байт, размер сжатых данных (без дополнительной информации): 6172 байта, размер дополнительных данных: 482 байта. Размер всего сжатого файла: 6172 + 482 = 6654 байта.

$ ./huffman -u -f result.bin -o myfile_new.txt
6172
15678
482

Размер распакованного файла (полученные данные): 15678 байт, размер сжатых данных (без дополнительной информации): 6172 байта, размер дополнительных данных: 482 байта. Размер всего исходного сжатого файла: 6172 + 482 = 6654 байта.

    Формат сдачи. В директории hw03 в репозитории должны быть: директория src, директория test, Makefile.

    Директория src: main.cpp, huffman.h, huffman.cpp
    Директория test: test.cpp, autotest.h, autotest.cpp, huffman_test.h, huffman_test.cpp
    Makefile:
        цель по умолчанию собирает исполняемый файл huffman и объектные файлы в директорию bin (создается при сборке, если не существует)
        цель test собирает исполняемый файл test и объектные файлы в директорию bin
        цель clean очищает директорию bin
    На выполнение задачи дается три недели и три попытки. Раз в неделю присланные решения будут проверяться. Дедлайны:
        16 апреля 06:00
        23 апреля 06:00
        30 апреля 06:00 Рекомендуется заканчивать работу по крайней мере за 6 часов до дедлайна.

    Contact GitHub API Training Shop Blog About 

    © 2017 GitHub, Inc. Terms Privacy Security Status Help 

